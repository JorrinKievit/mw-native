name: release mobile app

on:
  push:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  bump-version:
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
  
        - name: Automated Version Bump
          uses: phips28/gh-action-bump-version@v11.0.0
          with:
            skip-tag:  'true'
            commit-message: 'chore: bump mobile version to {{version}} [skip ci]'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            PACKAGEJSON_DIR: 'apps/expo'
            
  build-android:
    runs-on: ubuntu-latest
    needs: [bump-version]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull version bump
        run: git pull --all

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: pnpm install

      - name: Build Android app
        run: cd apps/expo && pnpm run apk

      - name: Rename apk
        run: cd apps/expo && mv android/app/build/outputs/apk/release/app-release.apk android/app/build/outputs/apk/release/movie-web.apk

      - name: Upload movie-web.apk as artifact
        uses: actions/upload-artifact@v4
        with:
          name: apk
          path: ./apps/expo/android/app/build/outputs/apk/release/movie-web.apk

  build-ios:
    runs-on: macos-14
    needs: [bump-version]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull version bump
        run: git pull --all

      - name: Xcode Select Version
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.1.0'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21
  
      - uses: pnpm/action-setup@v3
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Install dependencies
        run: pnpm install

      - name: Build iOS app
        run: cd apps/expo && pnpm run ipa
          
      - name: Pack .ipa from .app
        run: |
          cd apps/expo
          mkdir -p ios/build/Build/Products/Release-iphoneos/Payload
          mv ios/build/Build/Products/Release-iphoneos/movieweb.app ios/build/Build/Products/Release-iphoneos/Payload/
          cd ios/build/Build/Products/Release-iphoneos
          zip -r ../../../movie-web.ipa Payload

      - name: Upload movie-web.ipa as artifact
        uses: actions/upload-artifact@v4
        with:
          name: ipa
          path: ./apps/expo/ios/build/movie-web.ipa

  release-app:
    runs-on: ubuntu-latest
    needs: [build-android, build-ios]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Pull version bump
        run: git pull --all
        
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true

      - name: Get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
        with:
          path: apps/expo

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.current-version }}          
          files: |
            movie-web.apk
            movie-web.ipa
          generate_release_notes: true
          fail_on_unmatched_files: true
          token: ${{ env.GITHUB_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  app-repo:
    continue-on-error: true
    environment:
       name: github-pages
       url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: [build-ios, release-app]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 21

      - name: Get new version and release date
        id: vars
        run: |
            VERSION=$(jq -r '.version' apps/expo/package.json)
            DATE=$(date -Iseconds)
            echo "::set-output name=version::$VERSION"
            echo "::set-output name=date::$DATE"
  
      - name: Update app-repo.json
        run: |
          IPA_SIZE=$(stat -c%s "movie-web.ipa")
          jq --arg IPA_SIZE "$IPA_SIZE" '.apps[0].versions[0].version = "${{ steps.vars.outputs.version }}" | .apps[0].versions[0].date = "${{ steps.vars.outputs.date }}" | .apps[0].versions[0].size = ($IPA_SIZE | tonumber)' apps/expo/app-repo.json > temp.json
          mkdir -p pages
          mv temp.json pages/repo.json
  
      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./pages
          destination: ./_site

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
